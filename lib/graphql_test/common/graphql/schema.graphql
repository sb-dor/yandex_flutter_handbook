scalar DateTime

# for queries
type Query {
    user(id: ID, email: String): User
    users(first: Int, page: Int): PaginatorHolder! @paginate
    roles(first: Int, page: Int): PaginatorHolder! @paginate
}

# for create and update
type Mutation {
    createUser(name: String!, auction_enabled: Int!, access_to_agents: Int!, email: String): User
}

type User {
    id: ID!
    name: String
    email: String
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime
    auction_enabled: Int!
    access_to_agents: Int!
    role: Role
}

type Role {
    id: ID!
    role: String
}

type PaginatorHolder {
    paginatorInfo: PaginatorInfo!
    data: [User!]!
}


type PaginatorInfo {
    count: Int!
    currentPage: Int!
    firstItem: Int
    hasMorePages: Boolean!
    lastItem: Int
    lastPage: Int!
    perPage: Int!
    total: Int!
}